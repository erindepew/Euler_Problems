__author__ = 'erindepew'
'''
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
'''
def fib_list ( range , num1, num2):
    '''
    (int, int, int) -> list of ints

    return a list of a Fibonacci sequence within the given range of range. Initiate the sequence using num1 and num2

    '''

    list = [num1, num2]
    position = 0
    sum = 0

    while (sum < range):
        sum = list[position]+ list[position+1]
        if sum <= range:
            list.append(sum)
            position = position + 1

    return list

def remove_odd(num_list):
    '''
    (list)-> list

    returns a list of even numbers from a list of odd and even numbers

    '''

    new_list=[]
    for x in num_list:
        if x%2==0:
            new_list.append(x)
    return new_list




init_list = fib_list(4000000, 1, 2)
even_list = remove_odd(init_list)
print sum(even_list)
